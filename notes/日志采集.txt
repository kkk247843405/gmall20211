一、反向代理介绍

      正向代理： 代理的是客户端的IP
                        将一个中国大陆的IP ，访问一个代理服务器，由代理服务器将大陆的IP代理为 其他地区的IP，继续访问希望访问的服务！

      反向代理：  代理的是服务端的IP
                         客户访问的是 www.a.com, www.a.com(域名)对应一个IP，如果这个IP被一个反向代理服务器代理了，此时


                            客户 ---------> www.a.com
                                最终

                              客户 ---------> www.a.com ----->反向代理的服务器 ---------> www.b.com


二、静态资源

        在web应用中将所有的资源分为两种：

        动态资源：  指需要编译后，才能访问的资源。
                        例如 .java文件

        静态资源：  指无需编译，就可以直接访问。
                        .html
                        图片，视频

三、反向代理 和 负载均衡

1.反向代理

            客户端   ---------> url  ----->  hadoop102:8888
                                            hadoop103:8888
                                            hadoop104:8888


             url: 是反向代理的服务器的IP和端口

             客户端-----------> 反向代理服务器(ngnix) -------------->将url代理为  hadoop102/hadoop103/hadoop104:8888

            url: mock.url: "http://localhost:8089/gmall_logger/applog"



            反向代理的原理：
                    客户端 --------->反向代理服务器

                    url : hadoop103:80/ 路径  ------->反向代理服务器----------> hadoop102/103/104:8888/路径

                    举例：hadoop103:80/gmall_logger/hello ------->反向代理服务器----------> hadoop102/103/104:8888/gmall_logger/hello


